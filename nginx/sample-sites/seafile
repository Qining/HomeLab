# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}

# If we receive X-Forwarded-Port, pass it through; otherwise, pass along the
# server port the client connected to
map $http_x_forwarded_port $proxy_x_forwarded_port {
  default $http_x_forwarded_port;
  ''      $server_port;
}

# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}

# Default dhparam
ssl_dhparam /etc/nginx/dhparam/dhparam.pem;

# Set appropriate X-Forwarded-Ssl header
map $scheme $proxy_x_forwarded_ssl {
  default off;
  https on;
}
gzip_types text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
log_format vhost '$host $remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent"';
access_log off;

# HTTP 1.1 support
proxy_http_version 1.1;
proxy_buffering off;

# Mitigate httpoxy attack (see README for details)
proxy_set_header Proxy "";

# seafile.example.dev
upstream seafile.example.dev {
  # seafile local http ip:port
  server 192.168.xx.xx:yyyy;
  # Cannot connect to network of this container
  server 127.0.0.1 down;
}

# seafdav.example.dev
upstream seafdav.example.dev {
  server 192.168.xx.xx:yyyy;
  server 127.0.0.1 down;
}

server {
  server_name seafile.example.dev;
  access_log /var/log/nginx/access.log vhost;

  location / {
    proxy_pass http://seafile.example.dev;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
    proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;

    proxy_read_timeout 1200s;
	  client_max_body_size 0;

    access_log  /var/log/nginx/seahub.access.log;
    error_log   /var/log/nginx/seahub.error.log;
  }

  location /seafdav {
    proxy_pass http://seafdav.example.dev/seafdav;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
    proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;

    proxy_read_timeout 1200s;
	  client_max_body_size 0;

    access_log  /var/log/nginx/seafdav.access.log;
    error_log   /var/log/nginx/seafdav.error.log;
  }

  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/seafile.example.dev/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/seafile.example.dev/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
  if ($host = seafile.example.dev) {
      return 301 https://$host$request_uri;
  } # managed by Certbot


  server_name seafile.example.dev;
  listen 80 ;
  return 404; # managed by Certbot
}
