apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: seafile
  name: seafile
spec:
  selector:
    matchLabels:
      app: seafile
  replicas: 1
  template:
    metadata:
      labels:
        app: seafile
    spec:
      nodeSelector:
        host_seafile: "true"
      containers:
      - env:
        - name: DB_HOST
          value: seafile-db
        - name: DB_ROOT_PASSWD
          valueFrom:
            secretKeyRef:
              name: seafile-db-cred
              key: password
        - name: SEAFILE_ADMIN_EMAIL
          value: admin.owner@domain.com
        - name: SEAFILE_ADMIN_PASSWORD
          value: admin_password_change_me
        - name: SEAFILE_SERVER_HOSTNAME
          value: seafile.example.org
        - name: SEAFILE_SERVER_LETSENCRYPT
          value: "false"
        - name: "TIME_ZONE"
          value: "US/Eastern"
        image: localhost:32000/seafile:local
        name: seafile
        ports:
        - containerPort: 80
        # - containerPort: 443
        volumeMounts:
        - mountPath: /shared
          name: seafile-files
      restartPolicy: Always
      volumes:
      - name: seafile-files
        hostPath:
          path: /seafile-files
          type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: seafile
  name: seafile
spec:
  ports:
  - name: "80"
    port: 80
    targetPort: 80
  # - name: "443"
    # port: 443
    # targetPort: 443
  selector:
    app: seafile
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: seafile
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - seafile.example.org
    secretName: seafile-example-tls
  rules:
    - host: seafile.example.org
      http:
        paths:
        - path: /
          backend:
            serviceName: seafile
            servicePort: 80
