# apiVersion: v1
# kind: Secret
# metadata:
  # namespace: rocketchat
  # name: mongo-db-cred
# type: Opaque
# # rocketchat
# data:
  # password: cm9ja2V0Y2hhdA==
---
apiVersion: apps/v1
kind: StatefulSet
# kind: Deployment
metadata:
  namespace: rocketchat
  labels:
    app: mongo-db
  name: mongo-db
spec:
  serviceName: "mongo"
  replicas: 1
  selector:
    matchLabels:
      app: mongo-db
  template:
    metadata:
      labels:
        app: mongo-db
    spec:
      nodeSelector:
        host_rocketchat: "true"
      containers:
      - name: mongo-db
        image: mongo:4.0
        command:
        - "mongod"
        - "--bind_ip_all"
        - "--smallfiles"
        - "--oplogSize"
        - "128"
        - "--replSet"
        - "rs0"
        - "--noprealloc"
        ports:
          - containerPort: 27017
        volumeMounts:
        - name: mongo-db-files
          mountPath: /data/db
        # - name: mongo-key
          # mountPath: "/etc/secrets-volume"
          # readOnly: true
      - name: mongo-sidecar
        image: cvallance/mongo-k8s-sidecar
        env:
          - name: MONGO_SIDECAR_POD_LABELS
            value: "app=mongo-db"
          - name: KUBE_NAMESPACE
            value: "rocketchat"
      restartPolicy: Always
      volumes:
      - name: mongo-db-files
        hostPath:
          path: /mongo-db-files
          type: DirectoryOrCreate
      # - name: mongo-key
        # secret:
          # defaultMode: 0400
          # secretName: mongo-db-cred
---
apiVersion: v1
kind: Service
metadata:
  namespace: rocketchat
  labels:
    app: mongo-db
  name: mongo
spec:
  ports:
  - name: "27017"
    port: 27017
    targetPort: 27017
  selector:
    app: mongo-db
  # type: ClusterIP
  clusterIP: None
